{"ast":null,"code":"export const Covid = {\n  handleCSVResult(csvString) {\n    // Get the div element to append the data to\n    //var dataArea = document.getElementById('csv-data');\n    // Split csv to rows array\n    var rows = csvString.split('\\n'); //console.log(rows);\n\n    let newRows = rows.map(element => element.split(\",\"));\n    console.log(newRows);\n    let washington = [];\n\n    for (let i = 1; i < newRows.length; i++) {\n      if (newRows[i][1] === \"Washington\") {\n        washington.push(newRows[i]);\n      }\n    }\n\n    console.log(washington);\n    let dateArr = washington.map(element => element[0]); //console.log(dateArr);\n\n    let casesArr = washington.map(element => element[3]); //create array of new cases found each day\n\n    let newCases = [];\n\n    for (let i = 1; i < casesArr.length; i++) {\n      let element;\n      element = casesArr[i] - casesArr[i - 1];\n      newCases.push(element);\n    }\n\n    let deathsArr = washington.map(element => element[4]);\n    washington = [dateArr, casesArr, deathsArr]; //console.log(washTotal);\n\n    return washington;\n    /*\n    var htmlStr = '';\n    // Iterate over each row\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      //console.log(row);\n      // split row to cells\n      var cells = row.split(',');\n      // Extract data from cells of current row\n      var date = cells[0];\n      var state = cells[1];\n      // eslint-disable-next-line\n      var fips = cells[2];\n      var cases = cells[3];\n      var deaths = cells[4];\n      // Add extracted CSV data to string\n      //htmlStr += `<p>Date: ${date}, state: ${state}, cases: ${cases}, deaths: ${deaths}</p><br>`;\n    }\n    //console.log(htmlStr);\n    // Set the string generated from CSV as HTML of the dedicated div\n    //dataArea.innerHTML = htmlStr;\n    */\n  }\n\n};\n/*\nlet Alabama=\nlet Alaska=\nlet Arizona=\nlet Arkansas=\nlet California=\nlet Colorado=\nlet Connecticut=\nlet Delaware=\nlet DC=\nlet Florida=\nlet Georgia=\nlet Hawaii=\nlet Idaho=\nlet Kansas=\nlet Kentucky=\nlet Louisiana=\nlet Maine=\nlet Maryland=\nlet Massachusetts=\nlet Michigan=\nlet Minnesota=\nlet Mississippi=\nlet Missouri=\nlet Montana=\nlet Nebraska=\nlet Nevada=\nlet NewHampshire=\nlet NewJersey=\nlet NewMexico=\nlet New York=\nlet NorthCarolina=\nlet NorthDakota=\nlet Ohio=\nlet Oklahoma=\nlet Oregon=\nlet Pennsylvania=\nlet RhodeIsland=\nlet SouthCarolina=\nlet SouthDakota=\nlet Tennessee=\nlet Texas=\nlet Utah=\nlet Vermont=\nlet Virginia=\nlet Washington\nlet West Virginia\nlet Wisconsin\nlet Wyoming\nlet AmericanSamoa\nlet Micronesia\nlet Guam\nlet Mariana\nlet Palau\nlet PuertoRico\nlet VirginIslands\n\n*/\n\nconst states = [{\n  name: \"Alabama\",\n  value: 1\n}, {\n  name: \"Alaska\",\n  value: 2\n}, {\n  name: \"Arizona\",\n  value: 4\n}, {\n  name: \"Arkansas\",\n  value: 5\n}, {\n  name: \"California\",\n  value: 6\n}, {\n  name: \"Colorado\",\n  value: 8\n}, {\n  name: \"Connecticut\",\n  value: 9\n}, {\n  name: \"Delaware\",\n  value: 10\n}, {\n  name: \"District of Columbia\",\n  value: 11\n}, {\n  name: \"Florida\",\n  value: 12\n}, {\n  name: \"Georgia\",\n  value: 13\n}, {\n  name: \"Hawaii\",\n  value: 15\n}, {\n  name: \"Idaho\",\n  value: 16\n}, {\n  name: \"Illinois\",\n  value: 17\n}, {\n  name: \"Indiana\",\n  value: 18\n}, {\n  name: \"Iowa\",\n  value: 19\n}, {\n  name: \"Kansas\",\n  value: 20\n}, {\n  name: \"Kentucky\",\n  value: 21\n}, {\n  name: \"Louisiana\",\n  value: 22\n}, {\n  name: \"Maine\",\n  value: 23\n}, {\n  name: \"Maryland\",\n  value: 24\n}, {\n  name: \"Massachusetts\",\n  value: 25\n}, {\n  name: \"Michigan\",\n  value: 26\n}, {\n  name: \"Minnesota\",\n  value: 27\n}, {\n  name: \"Mississippi\",\n  value: 28\n}, {\n  name: \"Missouri\",\n  value: 29\n}, {\n  name: \"Montana\",\n  value: 30\n}, {\n  name: \"Nebraska\",\n  value: 31\n}, {\n  name: \"Nevada\",\n  value: 32\n}, {\n  name: \"New Hampshire\",\n  value: 33\n}, {\n  name: \"New Jersey\",\n  value: 34\n}, {\n  name: \"New Mexico\",\n  value: 35\n}, {\n  name: \"New York\",\n  value: 36\n}, {\n  name: \"North Carolina\",\n  value: 37\n}, {\n  name: \"North Dakota\",\n  value: 38\n}, {\n  name: \"Ohio\",\n  value: 39\n}, {\n  name: \"Oklahoma\",\n  value: 40\n}, {\n  name: \"Oregon\",\n  value: 41\n}, {\n  name: \"Pennsylvania\",\n  value: 42\n}, {\n  name: \"Rhode Island\",\n  value: 44\n}, {\n  name: \"South Carolina\",\n  value: 45\n}, {\n  name: \"South Dakota\",\n  value: 46\n}, {\n  name: \"Tennessee\",\n  value: 47\n}, {\n  name: \"Texas\",\n  value: 48\n}, {\n  name: \"Utah\",\n  value: 49\n}, {\n  name: \"Vermont\",\n  value: 50\n}, {\n  name: \"Virginia\",\n  value: 51\n}, {\n  name: \"Washington\",\n  value: 53\n}, {\n  name: \"West Virginia\",\n  value: 54\n}, {\n  name: \"Wisconsin\",\n  value: 55\n}, {\n  name: \"Wyoming\",\n  value: 56\n}, {\n  name: \"American Samoa\",\n  value: 60\n}, {\n  name: \"Federated States of Micronesia\",\n  value: 64\n}, {\n  name: \"Guam\",\n  value: 66\n}, {\n  name: \"Northern Mariana Islands\",\n  value: 69\n}, {\n  name: \"Palau\",\n  value: 70\n}, {\n  name: \"Puerto Rico\",\n  value: 72\n}, {\n  name: \"Virgin Islands\",\n  value: 78\n}];","map":{"version":3,"sources":["/Users/christinealbert/Coding/covid-19-app/src/Data/data.js"],"names":["Covid","handleCSVResult","csvString","rows","split","newRows","map","element","console","log","washington","i","length","push","dateArr","casesArr","newCases","deathsArr","states","name","value"],"mappings":"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","sourcesContent":["\n\nexport const Covid = {\n  handleCSVResult(csvString) {\n    // Get the div element to append the data to\n    //var dataArea = document.getElementById('csv-data');\n    \n    // Split csv to rows array\n    var rows = csvString.split('\\n');\n    //console.log(rows);\n    let newRows = rows.map(element => element.split(\",\"));\n    console.log(newRows);\n    let washington = [];\n    for (let i = 1; i < newRows.length; i++) {\n      if (newRows[i][1] === \"Washington\") {\n        washington.push(newRows[i]);\n      }\n      \n    }\n    \n    console.log(washington);\n    let dateArr = washington.map(element => element[0]);\n    //console.log(dateArr);\n    let casesArr = washington.map(element => element[3]);\n    \n    //create array of new cases found each day\n    let newCases = [];\n    for (let i = 1; i< casesArr.length; i++) {\n      let element;\n      element = casesArr[i] - casesArr[i-1];\n      newCases.push(element);\n    }\n    let deathsArr = washington.map(element => element[4]);\n    washington = [dateArr, casesArr, deathsArr];\n    //console.log(washTotal);\n    return washington;\n    /*\n    var htmlStr = '';\n    // Iterate over each row\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      //console.log(row);\n      // split row to cells\n      var cells = row.split(',');\n      // Extract data from cells of current row\n      var date = cells[0];\n      var state = cells[1];\n      // eslint-disable-next-line\n      var fips = cells[2];\n      var cases = cells[3];\n      var deaths = cells[4];\n      // Add extracted CSV data to string\n      //htmlStr += `<p>Date: ${date}, state: ${state}, cases: ${cases}, deaths: ${deaths}</p><br>`;\n    }\n    //console.log(htmlStr);\n    // Set the string generated from CSV as HTML of the dedicated div\n    //dataArea.innerHTML = htmlStr;\n    */\n  }\n}\n\n/*\nlet Alabama=\nlet Alaska=\nlet Arizona=\nlet Arkansas=\nlet California=\nlet Colorado=\nlet Connecticut=\nlet Delaware=\nlet DC=\nlet Florida=\nlet Georgia=\nlet Hawaii=\nlet Idaho=\nlet Kansas=\nlet Kentucky=\nlet Louisiana=\nlet Maine=\nlet Maryland=\nlet Massachusetts=\nlet Michigan=\nlet Minnesota=\nlet Mississippi=\nlet Missouri=\nlet Montana=\nlet Nebraska=\nlet Nevada=\nlet NewHampshire=\nlet NewJersey=\nlet NewMexico=\nlet New York=\nlet NorthCarolina=\nlet NorthDakota=\nlet Ohio=\nlet Oklahoma=\nlet Oregon=\nlet Pennsylvania=\nlet RhodeIsland=\nlet SouthCarolina=\nlet SouthDakota=\nlet Tennessee=\nlet Texas=\nlet Utah=\nlet Vermont=\nlet Virginia=\nlet Washington\nlet West Virginia\nlet Wisconsin\nlet Wyoming\nlet AmericanSamoa\nlet Micronesia\nlet Guam\nlet Mariana\nlet Palau\nlet PuertoRico\nlet VirginIslands\n\n*/\nconst states =  [\n  {name: \"Alabama\", value: 1},\n  {name: \"Alaska\", value: 2},\n  {name: \"Arizona\", value: 4},\n  {name: \"Arkansas\", value: 5},\n  {name: \"California\", value: 6},\n  {name: \"Colorado\", value: 8},\n  {name: \"Connecticut\", value: 9},\n  {name: \"Delaware\", value: 10},\n  {name: \"District of Columbia\", value: 11},\n  {name: \"Florida\", value: 12},\n  {name: \"Georgia\", value: 13},\n  {name: \"Hawaii\", value: 15},\n  {name: \"Idaho\", value: 16},\n  {name: \"Illinois\", value: 17},\n  {name: \"Indiana\", value: 18},\n  {name: \"Iowa\", value: 19},\n  {name: \"Kansas\", value: 20},\n  {name: \"Kentucky\", value: 21},\n  {name: \"Louisiana\", value: 22},\n  {name: \"Maine\", value: 23},\n  {name: \"Maryland\", value: 24},\n  {name: \"Massachusetts\", value: 25},\n  {name: \"Michigan\", value: 26},\n  {name: \"Minnesota\", value: 27},\n  {name: \"Mississippi\", value: 28},\n  {name: \"Missouri\", value: 29},\n  {name: \"Montana\", value: 30},\n  {name: \"Nebraska\", value: 31},\n  {name: \"Nevada\", value: 32},\n  {name: \"New Hampshire\", value: 33},\n  {name: \"New Jersey\", value: 34},\n  {name: \"New Mexico\", value: 35},\n  {name: \"New York\", value: 36},\n  {name: \"North Carolina\", value: 37},\n  {name: \"North Dakota\", value: 38},\n  {name: \"Ohio\", value: 39},\n  {name: \"Oklahoma\", value: 40},\n  {name: \"Oregon\", value: 41},\n  {name: \"Pennsylvania\", value: 42},\n  {name: \"Rhode Island\", value: 44},\n  {name: \"South Carolina\", value: 45},\n  {name: \"South Dakota\", value: 46},\n  {name: \"Tennessee\", value: 47},\n  {name: \"Texas\", value: 48},\n  {name: \"Utah\", value: 49},\n  {name: \"Vermont\", value: 50},\n  {name: \"Virginia\", value: 51},\n  {name: \"Washington\", value: 53},\n  {name: \"West Virginia\", value: 54},\n  {name: \"Wisconsin\", value: 55},\n  {name: \"Wyoming\", value: 56},\n  {name: \"American Samoa\", value: 60},\n  {name: \"Federated States of Micronesia\", value: 64},\n  {name: \"Guam\", value: 66},\n  {name: \"Northern Mariana Islands\", value: 69},\n  {name: \"Palau\", value: 70},\n  {name: \"Puerto Rico\", value: 72},\n  {name: \"Virgin Islands\", value: 78}\n  ];\n"]},"metadata":{},"sourceType":"module"}