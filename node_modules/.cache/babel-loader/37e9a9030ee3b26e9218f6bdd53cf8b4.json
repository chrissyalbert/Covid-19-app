{"ast":null,"code":"var _jsxFileName = \"/Users/christinealbert/Coding/covid-19-app/src/components/App.js\";\nimport React from 'react'; // eslint-disable-next-line\n\nimport classes from './App.module.css'; //import Dashboard from './Dashboard/Dashboard';\n\nimport { Covid } from '../Data/data';\nimport { GetData } from '../Data/GetData';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      washington: {\n        dates: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    const csvUrl = process.env.REACT_APP_CSV; //'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv';\n\n    /*\n    function handleCSVResult(csvString) {\n    // Get the div element to append the data to\n    var dataArea = document.getElementById('csv-data');\n    \n    // Split csv to rows array\n    var rows = csvString.split('\\n');\n    //console.log(rows);\n    let newRows = rows.map(element => element.split(\",\"));\n    console.log(newRows);\n    let washington = [];\n    for (let i = 1; i < newRows.length; i++) {\n      if (newRows[i][1] === \"Washington\") {\n        washington.push(newRows[i]);\n      }\n      //washington = newRows.filter(element => element[i][1] === \"Washington\");\n    }\n    //rows.filter(row => row[1] === \"Washington\");\n    \n    console.log(washington);\n    var htmlStr = '';\n    \n    // Iterate over each row\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      \n      //console.log(row);\n      // split row to cells\n      var cells = row.split(',');\n      \n      // Extract data from cells of current row\n      var date = cells[0];\n      var state = cells[1];\n      // eslint-disable-next-line\n      var fips = cells[2];\n      var cases = cells[3];\n      var deaths = cells[4];\n      \n      // Add extracted CSV data to string\n      htmlStr += `<p>Date: ${date}, state: ${state}, cases: ${cases}, deaths: ${deaths}</p><br>`;\n    }\n    \n    //console.log(htmlStr);\n    // Set the string generated from CSV as HTML of the dedicated div\n    dataArea.innerHTML = htmlStr;\n    }\n    */\n\n    /*\n    // Init Ajax Object\n    var ajax = new XMLHttpRequest();\n    \n    // Set a GET request to the URL which points to your CSV file\n    ajax.open('GET', csvUrl);\n    \n    // Set the action that will take place once the browser receives your CSV\n    ajax.onreadystatechange = function() {\n        if(ajax.readyState === XMLHttpRequest.DONE && ajax.status === 200) {\n            // Request was successful\n            var csvData = ajax.responseText;\n    \n            // Do something with that data here\n            Covid.handleCSVResult(csvData);\n            \n        }\n    }\n    \n    // Send request\n    ajax.send();  /*.then(response => {\n      this.setState({\n        washington: {\n          dates: response\n        }\n      });\n    });\n    */\n\n    GetData.handleRequest();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      id: \"csv-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null));\n  }\n\n}\n\nexport default App;\n/*\n <Dashboard \n    cases=\n/>\n\n*/","map":{"version":3,"sources":["/Users/christinealbert/Coding/covid-19-app/src/components/App.js"],"names":["React","classes","Covid","GetData","App","Component","constructor","props","state","washington","dates","componentDidMount","csvUrl","process","env","REACT_APP_CSV","handleRequest","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CACA;;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAGA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE;AADG;AADD,KAAb;AAKD;;AAEHC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAA3B,CADkB,CACyB;;AAC3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BAZ,IAAAA,OAAO,CAACa,aAAR;AACC;;AAECC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,yCADF,CADF;AAOD;;AAlG+B;;AAsGlC,eAAeb,GAAf;AACA","sourcesContent":["import React from 'react';\n// eslint-disable-next-line\nimport classes from './App.module.css';\n//import Dashboard from './Dashboard/Dashboard';\nimport { Covid } from '../Data/data';\nimport { GetData } from '../Data/GetData';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      washington: {\n        dates: []\n      } \n    }\n  }\n\ncomponentDidMount() {\n  const csvUrl = process.env.REACT_APP_CSV;  //'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv';\n  /*\n  function handleCSVResult(csvString) {\n  // Get the div element to append the data to\n  var dataArea = document.getElementById('csv-data');\n  \n  // Split csv to rows array\n  var rows = csvString.split('\\n');\n  //console.log(rows);\n  let newRows = rows.map(element => element.split(\",\"));\n  console.log(newRows);\n  let washington = [];\n  for (let i = 1; i < newRows.length; i++) {\n    if (newRows[i][1] === \"Washington\") {\n      washington.push(newRows[i]);\n    }\n    //washington = newRows.filter(element => element[i][1] === \"Washington\");\n  }\n  //rows.filter(row => row[1] === \"Washington\");\n  \n  console.log(washington);\n  var htmlStr = '';\n  \n  // Iterate over each row\n  for (var i = 0; i < rows.length; i++) {\n    var row = rows[i];\n    \n    //console.log(row);\n    // split row to cells\n    var cells = row.split(',');\n    \n    // Extract data from cells of current row\n    var date = cells[0];\n    var state = cells[1];\n    // eslint-disable-next-line\n    var fips = cells[2];\n    var cases = cells[3];\n    var deaths = cells[4];\n    \n    // Add extracted CSV data to string\n    htmlStr += `<p>Date: ${date}, state: ${state}, cases: ${cases}, deaths: ${deaths}</p><br>`;\n  }\n  \n  //console.log(htmlStr);\n  // Set the string generated from CSV as HTML of the dedicated div\n  dataArea.innerHTML = htmlStr;\n}\n*/\n/*\n// Init Ajax Object\nvar ajax = new XMLHttpRequest();\n\n// Set a GET request to the URL which points to your CSV file\najax.open('GET', csvUrl);\n\n// Set the action that will take place once the browser receives your CSV\najax.onreadystatechange = function() {\n    if(ajax.readyState === XMLHttpRequest.DONE && ajax.status === 200) {\n        // Request was successful\n        var csvData = ajax.responseText;\n\n        // Do something with that data here\n        Covid.handleCSVResult(csvData);\n        \n    }\n}\n\n// Send request\najax.send();  /*.then(response => {\n  this.setState({\n    washington: {\n      dates: response\n    }\n  });\n});\n*/\nGetData.handleRequest()\n}\n  \n  render() {\n    return (\n      <div className=\"App\" id=\"csv-data\">\n        <>\n        \n        </>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n/*\n <Dashboard \n    cases=\n/>\n\n*/"]},"metadata":{},"sourceType":"module"}