{"ast":null,"code":"var moment=require('moment');export var Covid={handleUSCSVResult:function handleUSCSVResult(csvString){// Split csv to rows array\nvar rows=csvString.split('\\n');var newRows=rows.map(function(element){return element.split(\",\");});var dateArr=newRows.map(function(element){return element[0];});dateArr.shift();dateArr=dateArr.map(function(element){return moment(element).format(\"MMM D, YYYY\");});var casesArr=newRows.map(function(element){return element[1];});casesArr.shift();var deathsArr=newRows.map(function(element){return element[2];});deathsArr.shift();newRows=[dateArr,casesArr,deathsArr];return newRows;},handleUSTotalPerCapita:function handleUSTotalPerCapita(csvString){var results=this.handleUSCSVResult(csvString);var cases=[];for(var i=1;i<results[1].length;i++){var element=void 0;element=Math.ceil(100000*results[1][i]/328239523);cases.push(element);}var deaths=[];for(var _i=1;_i<results[2].length;_i++){var _element=void 0;_element=Math.ceil(1000*results[1][_i]/328239523);deaths.push(_element);}var perCapitaResults=[results[0],cases,deaths];return perCapitaResults;},handleUSNewPerCapita:function handleUSNewPerCapita(csvString){var results=this.handleUSTotalPerCapita(csvString);var newCases=[];for(var i=1;i<results[1].length;i++){var element=void 0;element=results[1][i]-results[1][i-1];newCases.push(element);}var newDeaths=[];for(var _i2=1;_i2<results[2].length;_i2++){var _element2=void 0;_element2=results[2][_i2]-results[2][_i2-1];newDeaths.push(_element2);}var newResults=[results[0],newCases,newDeaths];return newResults;},handleUSNewCases:function handleUSNewCases(csvString){var results=this.handleUSCSVResult(csvString);var newCases=[];var dateArr=results[0];dateArr.shift();for(var i=1;i<results[1].length;i++){var element=void 0;element=results[1][i]-results[1][i-1];newCases.push(element);}var newDeaths=[];for(var _i3=1;_i3<results[2].length;_i3++){var _element3=void 0;_element3=results[2][_i3]-results[2][_i3-1];newDeaths.push(_element3);}var newResults=[dateArr,newCases,newDeaths];return newResults;},handleStatesCSVResult:function handleStatesCSVResult(csvString,fips){// Split csv to rows array\nvar rows=csvString.split('\\n');var newRows=rows.map(function(element){return element.split(\",\");});var selectedState=[];for(var i=1;i<newRows.length;i++){// eslint-disable-next-line\nif(newRows[i][2]==fips){selectedState.push(newRows[i]);}}var dateArr=selectedState.map(function(element){return element[0];});dateArr=dateArr.map(function(element){return moment(element).format(\"MMM D, YYYY\");});var casesArr=selectedState.map(function(element){return element[3];});var deathsArr=selectedState.map(function(element){return element[4];});var stateName=selectedState[1][1];selectedState=[dateArr,casesArr,deathsArr,stateName];return selectedState;},handleStatesNewCases:function handleStatesNewCases(csvString,fips){var selectedState=this.handleStatesCSVResult(csvString,fips);var dateArr=selectedState[0];dateArr.shift();//create array of new cases found each day\nvar newCases=[];for(var i=1;i<selectedState[1].length;i++){var element=void 0;element=selectedState[1][i]-selectedState[1][i-1];newCases.push(element);}var newDeaths=[];for(var _i4=1;_i4<selectedState[2].length;_i4++){var _element4=void 0;_element4=selectedState[2][_i4]-selectedState[2][_i4-1];newDeaths.push(_element4);}var newResults=[dateArr,newCases,newDeaths,selectedState[3]];return newResults;},handleStatesTotalPerCapita:function handleStatesTotalPerCapita(csvString,fips){var results=this.handleStatesCSVResult(csvString,fips);var population;var cases=[];// eslint-disable-next-line\nswitch(fips){case 1:population=4903185;break;case 2:population=731545;break;case 4:population=7278717;break;case 5:population=3017804;break;case 6:population=39512223;break;case 8:population=5758736;break;case 9:population=3565287;break;case 10:population=973764;break;case 11:population=705749;break;case 12:population=21477737;break;case 13:population=10617423;break;case 15:population=1415872;break;case 16:population=1787065;break;case 17:population=12671821;break;case 18:population=6732219;break;case 19:population=3155070;break;case 20:population=2913314;break;case 21:population=4467673;break;case 22:population=4648794;break;case 23:population=1344212;break;case 24:population=6045680;break;case 25:population=6892503;break;case 26:population=9986857;break;case 27:population=5639632;break;case 28:population=2976149;break;case 29:population=6137428;break;case 30:population=1068778;break;case 31:population=1934408;break;case 32:population=3080156;break;case 33:population=1359711;break;case 34:population=8882190;break;case 35:population=2096829;break;case 36:population=19453561;break;case 37:population=10488084;break;case 38:population=762062;break;case 39:population=11689100;break;case 40:population=3956971;break;case 41:population=4217737;break;case 42:population=12801989;break;case 44:population=1059361;break;case 45:population=5148714;break;case 46:population=884659;break;case 47:population=6829174;break;case 48:population=28995881;break;case 49:population=3205958;break;case 50:population=623989;break;case 51:population=8535519;break;case 53:population=7614893;break;case 54:population=1792147;break;case 55:population=5822434;break;case 56:population=578759;break;case 60:population=55465;break;case 66:population=165768;break;case 69:population=56882;break;case 72:population=3193694;break;case 78:population=106977;break;}for(var i=1;i<results[1].length;i++){var element=void 0;element=Math.ceil(100000*results[1][i]/population);cases.push(element);}var deaths=[];for(var _i5=1;_i5<results[2].length;_i5++){var _element5=void 0;_element5=Math.ceil(1000*results[1][_i5]/population);deaths.push(_element5);}var perCapitaResults=[results[0],cases,deaths,results[3]];return perCapitaResults;},handleStatesNewPerCapita:function handleStatesNewPerCapita(csvString,fips){var results=this.handleStatesTotalPerCapita(csvString,fips);var dateArr=results[0];dateArr.shift();var newCases=[];for(var i=1;i<results[1].length;i++){var element=void 0;element=results[1][i]-results[1][i-1];newCases.push(element);}var newDeaths=[];for(var _i6=1;_i6<results[2].length;_i6++){var _element6=void 0;_element6=results[2][_i6]-results[2][_i6-1];newDeaths.push(_element6);}var newResults=[dateArr,newCases,newDeaths,results[3]];return newResults;}};","map":{"version":3,"sources":["/Users/christinealbert/Coding/covid-19-app/src/Data/data.js"],"names":["moment","require","Covid","handleUSCSVResult","csvString","rows","split","newRows","map","element","dateArr","shift","format","casesArr","deathsArr","handleUSTotalPerCapita","results","cases","i","length","Math","ceil","push","deaths","perCapitaResults","handleUSNewPerCapita","newCases","newDeaths","newResults","handleUSNewCases","handleStatesCSVResult","fips","selectedState","stateName","handleStatesNewCases","handleStatesTotalPerCapita","population","handleStatesNewPerCapita"],"mappings":"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","sourcesContent":["const moment = require('moment');\n\nexport const Covid = {\n  handleUSCSVResult(csvString) {\n    // Split csv to rows array\n    var rows = csvString.split('\\n');\n    let newRows = rows.map(element => element.split(\",\"));\n    let dateArr = newRows.map(element => element[0]);\n    dateArr.shift();\n    dateArr = dateArr.map(element => moment(element).format(\"MMM D, YYYY\"));\n    let casesArr = newRows.map(element => element[1]);\n    casesArr.shift();\n    let deathsArr = newRows.map(element => element[2]);\n    deathsArr.shift();\n    newRows = [dateArr, casesArr, deathsArr];\n    return newRows;\n  },\n\n  handleUSTotalPerCapita(csvString) {\n    let results = this.handleUSCSVResult(csvString);\n    let cases = [];\n    for (let i = 1; i < results[1].length; i++) {\n      let element;\n      element = Math.ceil((100000 * results[1][i])/328239523);\n      cases.push(element);\n    }\n    let deaths = [];\n    for (let i = 1; i < results[2].length; i++) {\n      let element;\n      element = Math.ceil((1000 * results[1][i])/328239523);\n      deaths.push(element);\n    }\n    let perCapitaResults = [results[0], cases, deaths];\n    return perCapitaResults;\n  },\n\n  handleUSNewPerCapita(csvString) {\n    let results = this.handleUSTotalPerCapita(csvString);\n    let newCases = [];\n    for (let i = 1; i < results[1].length; i++) {\n      let element;\n      element = results[1][i] - results[1][i-1];\n      newCases.push(element);\n    }\n    let newDeaths = [];\n    for (let i = 1; i < results[2].length; i++) {\n      let element;\n      element = results[2][i] - results[2][i-1];\n      newDeaths.push(element);\n    }\n    let newResults = [results[0], newCases, newDeaths]\n    return newResults;\n  },\n\n  handleUSNewCases(csvString) {\n    let results = this.handleUSCSVResult(csvString);\n    let newCases = [];\n    let dateArr = results[0];\n    dateArr.shift();\n    for (let i = 1; i < results[1].length; i++) {\n      let element;\n      element = results[1][i] - results[1][i-1];\n      newCases.push(element);\n    }\n    let newDeaths = [];\n    for (let i = 1; i < results[2].length; i++) {\n      let element;\n      element = results[2][i] - results[2][i-1];\n      newDeaths.push(element);\n    }\n    let newResults = [dateArr, newCases, newDeaths]\n    return newResults;\n  },\n\n  handleStatesCSVResult(csvString, fips) {\n    // Split csv to rows array\n    var rows = csvString.split('\\n');\n    let newRows = rows.map(element => element.split(\",\"));\n    let selectedState = [];\n    for (let i = 1; i < newRows.length; i++) {\n      // eslint-disable-next-line\n      if (newRows[i][2] == fips) {\n        selectedState.push(newRows[i]);\n      }\n    }\n    let dateArr = selectedState.map(element => element[0]);\n    dateArr = dateArr.map(element => moment(element).format(\"MMM D, YYYY\"));\n    let casesArr = selectedState.map(element => element[3]);\n    let deathsArr = selectedState.map(element => element[4]);\n    let stateName = selectedState[1][1];\n    selectedState = [dateArr, casesArr, deathsArr, stateName];\n    return selectedState;\n  },\n\n  handleStatesNewCases(csvString, fips) {\n    let selectedState = this.handleStatesCSVResult(csvString, fips);\n    let dateArr = selectedState[0];\n    dateArr.shift();\n    //create array of new cases found each day\n    let newCases = [];\n    for (let i = 1; i < selectedState[1].length; i++) {\n      let element;\n      element = selectedState[1][i] - selectedState[1][i-1];\n      newCases.push(element);\n    }\n    let newDeaths = [];\n    for (let i = 1; i < selectedState[2].length; i++) {\n      let element;\n      element = selectedState[2][i] - selectedState[2][i-1];\n      newDeaths.push(element);\n    }\n    let newResults = [dateArr, newCases, newDeaths, selectedState[3]]\n    return newResults;\n  },\n\n  handleStatesTotalPerCapita(csvString, fips) {\n    let results = this.handleStatesCSVResult(csvString, fips);\n    let population;\n    let cases = [];\n    // eslint-disable-next-line\n    switch(fips) {\n      case 1:\n        population = 4903185;\n        break;\n      case 2:\n        population = 731545;\n        break;\n      case 4:\n        population = 7278717;\n        break;\n      case 5:\n        population = 3017804;\n        break;\n      case 6:\n        population = 39512223;\n        break;\n      case 8:\n        population = 5758736;\n        break;\n      case 9:\n        population = 3565287;\n        break;\n      case 10:\n        population = 973764;\n        break;\n      case 11:\n        population = 705749;\n        break;\n      case 12:\n        population = 21477737;\n        break;\n      case 13:\n        population = 10617423;\n        break;\n      case 15:\n        population = 1415872;\n        break;\n      case 16:\n        population = 1787065;\n        break;\n      case 17:\n        population = 12671821;\n        break;\n      case 18:\n        population = 6732219;\n        break;\n      case 19:\n        population = 3155070;\n        break;\n      case 20:\n        population = 2913314;\n        break;\n      case 21:\n        population = 4467673;\n        break;\n      case 22:\n        population = 4648794;\n        break;\n      case 23:\n        population = 1344212;\n        break;\n      case 24:\n        population = 6045680;\n        break;\n      case 25:\n        population = 6892503;\n        break;\n      case 26:\n        population = 9986857;\n        break;\n      case 27:\n        population = 5639632;\n        break;\n      case 28:\n        population = 2976149;\n        break;\n      case 29:\n        population = 6137428;\n        break;\n      case 30:\n        population = 1068778;\n        break;\n      case 31:\n        population = 1934408;\n        break;\n      case 32:\n        population = 3080156;\n        break;\n      case 33:\n        population = 1359711;\n        break;\n      case 34:\n        population = 8882190;\n        break;\n      case 35:\n        population = 2096829;\n        break;\n      case 36:\n        population = 19453561;\n        break;\n      case 37:\n        population = 10488084;\n        break;\n      case 38:\n        population = 762062;\n        break;\n      case 39:\n        population = 11689100;\n        break;\n      case 40:\n        population = 3956971;\n        break;\n      case 41:\n        population = 4217737;\n        break;\n      case 42:\n        population = 12801989;\n        break;\n      case 44:\n        population = 1059361;\n        break;\n      case 45:\n        population = 5148714;\n        break;\n      case 46:\n        population = 884659;\n        break;\n      case 47:\n        population = 6829174;\n        break;\n      case 48:\n        population = 28995881;\n        break;\n      case 49:\n        population = 3205958;\n        break;\n      case 50:\n        population = 623989;\n        break;\n      case 51:\n        population = 8535519;\n        break;\n      case 53:\n        population = 7614893;\n        break;\n      case 54:\n        population = 1792147;\n        break;\n      case 55:\n        population = 5822434;\n        break;\n      case 56:\n        population = 578759;\n        break;\n      case 60:\n        population = 55465;\n        break;\n      case 66:\n        population = 165768;\n        break;\n      case 69:\n        population = 56882;\n        break;\n      case 72:\n        population = 3193694;\n        break;\n      case 78:\n        population = 106977;\n        break;                             \n    }\n    for (let i = 1; i < results[1].length; i++) {\n      let element;\n      element = Math.ceil((100000 * results[1][i])/population);\n      cases.push(element);\n    }\n    let deaths = [];\n    for (let i = 1; i < results[2].length; i++) {\n      let element;\n      element = Math.ceil((1000 * results[1][i])/population);\n      deaths.push(element);\n    }\n    let perCapitaResults = [results[0], cases, deaths, results[3]];\n    return perCapitaResults;\n  },\n\n  handleStatesNewPerCapita(csvString, fips) {\n    let results = this.handleStatesTotalPerCapita(csvString, fips);\n    let dateArr = results[0];\n    dateArr.shift();\n    let newCases = [];\n    for (let i = 1; i < results[1].length; i++) {\n      let element;\n      element = results[1][i] - results[1][i-1];\n      newCases.push(element);\n    }\n    let newDeaths = [];\n    for (let i = 1; i < results[2].length; i++) {\n      let element;\n      element = results[2][i] - results[2][i-1];\n      newDeaths.push(element);\n    }\n    let newResults = [dateArr, newCases, newDeaths, results[3]];\n    return newResults;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}