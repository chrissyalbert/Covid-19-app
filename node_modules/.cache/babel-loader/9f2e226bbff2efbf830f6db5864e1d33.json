{"ast":null,"code":"import { Covid } from './data';\n\nconst axios = require('axios');\n\nconst csvStatesUrl = process.env.REACT_APP_CSV;\nconst csvUrl = process.env.REACT_APP_USCSV;\nexport const GetData = {\n  handleUSRequest() {\n    return axios.get(csvUrl).then(data => {\n      return Covid.handleUSCSVResult(data.data);\n    }).catch(error => console.error(error));\n  },\n\n  handleUSTotalPerCapita() {\n    return axios.get(csvUrl).then(data => {\n      return Covid.handleUSTotalPerCapita(data.data);\n    }).catch(error => console.error(error));\n  },\n\n  handleUSNewPerCapita() {\n    return axios.get(csvUrl).then(data => {\n      return Covid.handleUSNewPerCapita(data.data);\n    }).catch(error => console.error(error));\n  },\n\n  handleUSCasesNewCases() {\n    return axios.get(csvUrl).then(data => {\n      return Covid.handleUSNewCases(data.data);\n    }).catch(error => console.error(error));\n  },\n\n  handleStatesRequest(fips) {\n    return axios.get(csvStatesUrl).then(data => {\n      return Covid.handleStatesCSVResult(data.data, fips);\n    }).catch(error => console.error(error));\n  },\n\n  handleStatesTotalPerCapita(fips) {\n    return axios.get(csvStatesUrl).then(data => {\n      return Covid.handleStatesTotalPerCapita(data.data, fips);\n    }).catch(error => console.error(error));\n  },\n\n  handleStatesNewPerCapita(fips) {\n    return axios.get(csvStatesUrl).then(data => {\n      return Covid.handleStatesNewPerCapita(data.data, fips);\n    }).catch(error => console.error(error));\n  },\n\n  handleStatesNewCases(fips) {\n    return axios.get(csvStatesUrl).then(data => {\n      return Covid.handleStatesNewCases(data.data, fips);\n    }).catch(error => console.error(error));\n  }\n\n};","map":{"version":3,"sources":["/Users/christinealbert/Coding/covid-19-app/src/Data/GetData.js"],"names":["Covid","axios","require","csvStatesUrl","process","env","REACT_APP_CSV","csvUrl","REACT_APP_USCSV","GetData","handleUSRequest","get","then","data","handleUSCSVResult","catch","error","console","handleUSTotalPerCapita","handleUSNewPerCapita","handleUSCasesNewCases","handleUSNewCases","handleStatesRequest","fips","handleStatesCSVResult","handleStatesTotalPerCapita","handleStatesNewPerCapita","handleStatesNewCases"],"mappings":"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","sourcesContent":["import { Covid } from './data';\nconst axios = require('axios');\n\nconst csvStatesUrl = process.env.REACT_APP_CSV;\n\nconst csvUrl = process.env.REACT_APP_USCSV;\nexport const GetData = {\n\thandleUSRequest() {\n\t\treturn axios.get(csvUrl).then(data => {\n\t\t\treturn Covid.handleUSCSVResult(data.data);\n\t\t}).catch(error => console.error(error));\n\t},\n\n\thandleUSTotalPerCapita() {\n\t\treturn axios.get(csvUrl).then(data => {\n\t\t\treturn Covid.handleUSTotalPerCapita(data.data);\n\t\t}).catch(error => console.error(error));\n\t},\n\t\n\thandleUSNewPerCapita() {\n\t\treturn axios.get(csvUrl).then(data => {\n\t\t\treturn Covid.handleUSNewPerCapita(data.data);\n\t\t}).catch(error => console.error(error));\n\t},\n\n\thandleUSCasesNewCases() {\n\t\treturn axios.get(csvUrl).then(data => {\n\t\t\treturn Covid.handleUSNewCases(data.data);\n\t\t}).catch(error => console.error(error));\n\t},\n\n\thandleStatesRequest(fips) {\n\t\treturn axios.get(csvStatesUrl).then(data => {\n\t\t\t return Covid.handleStatesCSVResult(data.data, fips);\n\t\t}).catch(error => console.error(error));\n\t},\n\n\thandleStatesTotalPerCapita(fips) {\n\t\treturn axios.get(csvStatesUrl).then(data => {\n\t\t\treturn Covid.handleStatesTotalPerCapita(data.data, fips);\n\t }).catch(error => console.error(error));\n\t},\n\n\thandleStatesNewPerCapita(fips) {\n\t\treturn axios.get(csvStatesUrl).then(data => {\n\t\t\treturn Covid.handleStatesNewPerCapita(data.data, fips);\n\t }).catch(error => console.error(error));\n\t},\n\n\thandleStatesNewCases(fips) {\n\t\treturn axios.get(csvStatesUrl).then(data => {\n\t\t\t return Covid.handleStatesNewCases(data.data, fips);\n\t\t}).catch(error => console.error(error));\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}